import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import builtins from 'builtin-modules';
import replace from '@rollup/plugin-replace';

const banner = `
/*
THIS IS A GENERATED/BUNDLED FILE BY VITE
if you want to view the source, please visit the github repository of this plugin
*/
`;

export default defineConfig(({ mode }) => {
  const isProduction = mode === 'production';

  return {
    plugins: [react()],
    resolve: {
      alias: {
        '@': '/src', // Alias für die Nutzung von "@/..." für src-Dateien
      },
    },
    build: {
      lib: {
        entry: 'main.ts', // Entry-Point
        formats: ['cjs'], // CommonJS-Ausgabe
        fileName: () => 'main.js', // Name der Ausgabedatei
      },
      rollupOptions: {
        external: [
          'obsidian',
          'electron',
          '@codemirror/autocomplete',
          '@codemirror/collab',
          '@codemirror/commands',
          '@codemirror/language',
          '@codemirror/lint',
          '@codemirror/search',
          '@codemirror/state',
          '@codemirror/view',
          '@lezer/common',
          '@lezer/highlight',
          '@lezer/lr',
          ...builtins, // Externe Module
        ],
        output: {
          dir: '.', // Ausgabe im aktuellen Verzeichnis
          entryFileNames: 'main.js',
          assetFileNames: '[name].[ext]', // Unterstützt zusätzliche Assets wie styles.css
          banner, // Fügt ein Kommentar-Banner hinzu
          exports: 'named', // Named Exports für konsistente Nutzung
        },
      },
      target: 'es2018', // Zielplattform
      sourcemap: isProduction ? false : 'inline', // Sourcemap je nach Modus
      minify: 'esbuild', // Eingebaute Minifizierung von Vite verwenden
      emptyOutDir: true, // Leert das Ausgabeverzeichnis vor dem Build
    },
  };
});
